<!DOCTYPE html>
<html>
  <head>
    <title>GraphQL Playground</title>
    <link rel="stylesheet" href="https://unpkg.com/graphql-playground-react/build/static/css/index.css" />
    <link rel="shortcut icon" href="https://graphql-playground.com/favicon.png" />
    <script src="https://unpkg.com/graphql-playground-react/build/static/js/middleware.js"></script>
  </head>
  <body>
    <div id="root"></div>
    <script>
      window.addEventListener('load', function () {
        GraphQLPlayground.init(document.getElementById('root'), {
          endpoint: '/graphql'
        });
      });
    </script>
  </body>
</html>

//----------------
import org.springframework.context.annotation.Configuration;
import org.springframework.web.servlet.config.annotation.CorsRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;

@Configuration
public class CorsConfig implements WebMvcConfigurer {
    @Override
    public void addCorsMappings(CorsRegistry registry) {
        registry.addMapping("/custom-resolver/graphql") // ðŸ‘ˆ matches your endpoint
                .allowedOrigins("https://studio.apollographql.com")
                .allowedMethods("GET", "POST", "OPTIONS")
                .allowCredentials(false);
    }
}
//------------------
package com.yourcompany.yourapp.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.http.HttpMethod;
import org.springframework.http.HttpStatus;
import org.springframework.web.server.ServerWebExchange;
import org.springframework.web.server.WebFilter;
import org.springframework.web.server.WebFilterChain;
import org.springframework.http.server.reactive.ServerHttpRequest;
import org.springframework.http.server.reactive.ServerHttpResponse;
import reactor.core.publisher.Mono;

@Configuration
public class CorsWebFluxConfig {

    @Bean
    public WebFilter corsFilter() {
        return (ServerWebExchange exchange, WebFilterChain chain) -> {
            ServerHttpRequest request = exchange.getRequest();
            ServerHttpResponse response = exchange.getResponse();

            response.getHeaders().add("Access-Control-Allow-Origin", "https://studio.apollographql.com");
            response.getHeaders().add("Access-Control-Allow-Methods", "GET, POST, OPTIONS");
            response.getHeaders().add("Access-Control-Allow-Headers", "*");

            if (request.getMethod() == HttpMethod.OPTIONS) {
                response.setStatusCode(HttpStatus.OK);
                return response.setComplete();
            }

            return chain.filter(exchange);
        };
    }
}

//-------------------------------------------------------------
@Configuration
public class CorsConfig {

    @Bean
    public WebMvcConfigurer corsConfigurer() {
        return new WebMvcConfigurer() {
            @Override
            public void addCorsMappings(CorsRegistry registry) {
                registry.addMapping("/test/graphql")
                        .allowedOrigins("*")   // or restrict to specific domains
                        .allowedMethods("GET", "POST")
                        .allowedHeaders("*");
            }
        };
    }
}
